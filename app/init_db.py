"""
Database initialization script
Creates initial data: admin user and default pages
"""
from sqlalchemy.orm import Session
from app.core.database import SessionLocal
from app.core.security import get_password_hash
from app.core.config import settings
from app.models.user import User
from app.models.page import Page


def init_admin_user(db: Session) -> None:
    """Create initial admin user"""
    admin = db.query(User).filter(User.phone == settings.ADMIN_PHONE).first()
    
    if not admin:
        admin = User(
            phone=settings.ADMIN_PHONE,
            password_hash=get_password_hash(settings.ADMIN_PASSWORD),
            full_name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            is_admin=True,
            is_active=True
        )
        db.add(admin)
        db.commit()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {settings.ADMIN_PHONE}")
    else:
        print(f"‚ÑπÔ∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {settings.ADMIN_PHONE}")


def init_default_pages(db: Session) -> None:
    """Create default pages"""
    pages = [
        {
            "slug": "faq",
            "title": "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã",
            "content": "<h1>FAQ</h1><p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã.</p>"
        },
        {
            "slug": "offer",
            "title": "–î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã",
            "content": "<h1>–î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã</h1><p>–¢–µ–∫—Å—Ç –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã.</p>"
        },
        {
            "slug": "privacy",
            "title": "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏",
            "content": "<h1>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</h1><p>–¢–µ–∫—Å—Ç –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.</p>"
        },
        {
            "slug": "about",
            "title": "–û –ø—Ä–æ–µ–∫—Ç–µ",
            "content": "<h1>–û –ø—Ä–æ–µ–∫—Ç–µ DWC</h1><p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–æ–π –æ–¥–µ–∂–¥—ã.</p>"
        }
    ]
    
    for page_data in pages:
        existing = db.query(Page).filter(Page.slug == page_data["slug"]).first()
        if not existing:
            page = Page(**page_data)
            db.add(page)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {page_data['slug']}")
        else:
            print(f"‚ÑπÔ∏è  –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {page_data['slug']}")
    
    db.commit()


def init_db() -> None:
    """Initialize database with default data"""
    print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    db = SessionLocal()
    try:
        init_admin_user(db)
        init_default_pages(db)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}")
        db.rollback()
    finally:
        db.close()


if __name__ == "__main__":
    init_db()
